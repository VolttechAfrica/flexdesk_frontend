{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/middleware.ts"],"sourcesContent":["import { NextResponse } from 'next/server'\nimport type { NextRequest } from 'next/server'\n\n// Define public routes that don't require authentication\nconst publicRoutes = [\n  '/',\n  '/login',\n  '/about',\n  '/features',\n  '/get-started',\n  '/solutions',\n  '/support',\n  '/privacy',\n  '/terms',\n]\n\n// Authenticated-only routes (no role check here)\nconst authenticatedOnlyRoutes = [\n  '/onboarding',\n  '/dashboard',\n]\n\nfunction isPublicRoute(pathname: string): boolean {\n  return publicRoutes.some(route => pathname === route || pathname.startsWith(route + '/'))\n}\n\nfunction isAuthenticatedOnlyRoute(pathname: string): boolean {\n  return authenticatedOnlyRoutes.some(route => pathname === route || pathname.startsWith(route + '/'))\n}\n\n// Improved JWT validation with better security checks\nfunction isValidToken(token: string): boolean {\n  try {\n    if (!token || typeof token !== 'string') {\n      return false\n    }\n    // TODO: Implement token validation\n    return true\n  } catch {\n    return false\n  }\n}\n\n// Skip static assets and common public files\nconst ASSET_EXT = /\\.(?:png|jpg|jpeg|gif|webp|svg|ico|txt|xml|json|css|js|woff2?|ttf|otf|map)$/i\nfunction isStaticAsset(pathname: string): boolean {\n  if (pathname.startsWith('/_next')) return true\n  if (pathname.startsWith('/images')) return true\n  if (ASSET_EXT.test(pathname)) return true\n  if (pathname === '/favicon.ico' || pathname === '/robots.txt' || pathname === '/sitemap.xml' || pathname === '/manifest.webmanifest') return true\n  return false\n}\n\nexport function middleware(request: NextRequest) {\n  const { pathname } = request.nextUrl\n\n  // Skip static assets and API routes\n  if (isStaticAsset(pathname) || pathname.startsWith('/api')) {\n    return NextResponse.next()\n  }\n\n  // Allow public routes\n  if (isPublicRoute(pathname)) {\n    const response = NextResponse.next()\n    response.headers.set('X-Middleware-Cache', 'no-cache')\n    \n    // Add security headers for public routes\n    response.headers.set('X-Content-Type-Options', 'nosniff')\n    response.headers.set('X-Frame-Options', 'DENY')\n    response.headers.set('Referrer-Policy', 'strict-origin-when-cross-origin')\n    \n    return response\n  }\n\n  // Check for authentication token (uses access_token cookie)\n  const token = request.cookies.get('access_token')?.value\n\n  if (!token) {\n    const loginUrl = new URL('/login', request.url)\n    loginUrl.searchParams.set('redirect', pathname)\n    return NextResponse.redirect(loginUrl)\n  }\n\n  // Validate token\n  if (!isValidToken(token)) {\n    const loginUrl = new URL('/login', request.url)\n    loginUrl.searchParams.set('redirect', pathname)\n    loginUrl.searchParams.set('error', 'token_expired')\n\n    const response = NextResponse.redirect(loginUrl)\n    response.cookies.delete('access_token')\n    return response\n  }\n\n  // Handle authenticated-only routes (like onboarding) - no role check needed\n  if (isAuthenticatedOnlyRoute(pathname)) {\n    const response = NextResponse.next()\n    response.headers.set('X-Middleware-Cache', 'no-cache')\n    \n    // Add security headers for authenticated routes\n    response.headers.set('X-Content-Type-Options', 'nosniff')\n    response.headers.set('X-Frame-Options', 'DENY')\n    response.headers.set('Referrer-Policy', 'strict-origin-when-cross-origin')\n    \n    return response\n  }\n\n  // Let role-based gating be handled in the app (ProtectedRoute)\n  const response = NextResponse.next()\n  response.headers.set('X-Middleware-Cache', 'no-cache')\n  \n  // Add security headers for all authenticated routes\n  response.headers.set('X-Content-Type-Options', 'nosniff')\n  response.headers.set('X-Frame-Options', 'DENY')\n  response.headers.set('Referrer-Policy', 'strict-origin-when-cross-origin')\n  \n  return response\n}\n\nexport const config = {\n  matcher: [\n    // Match all routes except static files, images and API routes\n    '/((?!_next/static|_next/image|favicon.ico|images|api).*)',\n  ],\n}\n"],"names":[],"mappings":"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"}}]
}